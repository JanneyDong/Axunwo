# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-09 05:26
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile', models.CharField(default='', max_length=256, verbose_name='Profile')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docfile', models.FileField(upload_to='documents/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='RentPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_status', models.CharField(choices=[('a', 'available'), ('r', 'rented')], default='a', max_length=1)),
                ('post_bedroom', models.CharField(choices=[('0', '0 bedroom'), ('1', '1 bedroom'), ('2', '2 bedroom'), ('3', '3 bedroom'), ('4+', '4+ bedroom')], default='0', max_length=2)),
                ('post_bathroom', models.CharField(choices=[('0', '0 bathroom'), ('1', '1 bathroom'), ('2', '2 bathroom'), ('3+', '3+ bedroom')], default='0', max_length=2)),
                ('post_rentway', models.CharField(choices=[('e', 'entire house'), ('p', 'private room')], default='e', max_length=1)),
                ('post_type', models.CharField(choices=[('a', 'house'), ('h', 'apartment')], default='a', max_length=1)),
                ('post_content', models.TextField()),
                ('post_time', models.DateField()),
                ('post_title', models.CharField(default='', max_length=256)),
                ('photo_list', models.TextField()),
                ('post_price', models.IntegerField()),
                ('post_address', models.CharField(max_length=256)),
                ('post_available_time', models.DateField()),
                ('post_cat_allowed', models.BooleanField(default=False)),
                ('post_dog_allowed', models.BooleanField(default=False)),
                ('post_gym', models.BooleanField(default=False)),
                ('post_pool', models.BooleanField(default=False)),
                ('post_wechat', models.CharField(max_length=256)),
                ('post_phone', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_axunwo.RentPost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
